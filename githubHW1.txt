                                          GITHUB Homework 1


Все шаги сценария выполняются в Terminal, в папке под гитом.

                   JSON
 4. Создать внешний репозиторий c названием JSON. 

:Войти во вкладку Repositories => кнопка "+" => New repositories. Открывается страница на которой вводится в поле название JSON, выбрать public и поставить галочку на add readme.md file. Далее нажать на кнопку создать репозиторий.

 5. Клонировать репозиторий JSON на локальный компьютер.

:Открыть репозиторий JSON => нажать на кнопку code и скопировать ссылку https
Переход в терминал : 
Зайти в папку где будет размещен репозиторий cd HW2
Клонировать внешний репозиторий git clone https://github.com/LiudmylaUdov/JSON.git

 6. Внутри локального JSON создать файл “new.json”.

: cd JSON
  cat > new.json

  Control + C

 7. Добавить файл под гит.

: git add new.json

 8. Закоммитить файл.

: git commit -m "add new.json file"

 9. Отправить файл на внешний GitHub репозиторий.

: git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

:cat > new.json

{"name":"Liudmyla", "LastName": "Udovychenko", "pets" : "one"} 

Control + C

 11. Отправить изменения на внешний репозиторий.

:git add new.json
 git commit -m "add new.json new file"
 git push

 12. Создать файл preferences.json

:cat > preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
:
 {"favorite film": "home alone", "favorite series": "lost in space", "favorite dish": "potato", "favorite season": "spring", "country": "American" }

Control + C

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

:cat > sklls.json

{
	"skills":
	{   "1":"GitBash",
		"2": "GitHub",
		"3": "DevTools",
		"4": "Android Studio",
		"5": "JSON",
		"6": "XML",
		"7": "API",
		"8": "Charles",
		"9": "SQL",
		"10": "Jmeter",
		"11": "Python"

	}
}

Control + C

 15. Отправить сразу 2 файла на внешний репозиторий.

:git add .| git commit -m "add two files: preferences.json, sklls.json"
 git push

 16. На веб интерфейсе создать файл bug_report.json.

Вход в репозиторий JSON => нажать кнопку add file => нажать create new file => ввести название bug_report.json.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

:Внизу страницы нажать на зеленую кнопку Commit changes.

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

 {
  "ID": "1R",
  "Summary": "На странице регистрации нового пользователя, название формы не соответствует требованию, при визуальном осмотре страницы",
  "Project": "Form_testing", 
  "Environment":
{
  "Operating system": "OS	macOS 12.0.1 (21A559)",
  "Browser": "Mozilla Firefox, Google Chrome, Safari (17612.4.9.1.8)"
},
"Preconditions":	"http://itcareer.pythonanywhere.com/",	
"Description":
{
  "1": "Перейти на сайт ",
  "2": "Проверить название страницы"
},
"Actual result": "ITCareerToday web form",
"Expected result": "Registration form",	
"Severity":	"Major",
"Priority":	"Medium",
"Status":	"Open",	
"Reporter":	"Удовиченко",	
"Requirement": "1F",	
"Assignee":	"Ксендзов В."	
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

:Внизу страницы нажать на зеленую кнопку Commit changes.

 20. Синхронизировать внешний и локальный репозиторий JSON

:git pull


                         XML

 21. Создать внешний репозиторий c названием XML.

:Войти во вкладку Repositories => кнопка "+" => New repositories. Открывается страница на которой в поле вводится название XML, выбрать public и поставить галочку на add readme.md file. Далее нажать на кнопку создать репозиторий.

 22. Клонировать репозиторий XML на локальный компьютер.

Открыть репозиторий XNL => нажать на кнопку code и скопировать ссылку https

Переход в терминал : 

Зайти в папку где будет размещен репозиторий
:cd HW2
Клонировать репозиторий
:git clone https://github.com/LiudmylaUdov/XML.git

 23. Внутри локального XML создать файл “new.xml”.

:cat > new.xml

Control + C

 24. Добавить файл под гит.

:git add new.xml

 25. Закоммитить файл.

:git commit -m "add new.xml file"

 26. Отправить файл на внешний GitHub репозиторий.

:git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.

: cat > new.xml

<root>
    <name>Liudmyla</name>
    <LastName>Udovychenko</LastName>
    <pets>one</pets>
</root>

Control + C

 28. Отправить изменения на внешний репозиторий.
:  git add new.xml
   git commit -m "add new.xml file 2"
   git push 

 29. Создать файл preferences.xml

:cat > preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
:
<?xml version="1.0" encoding="UTF-8" ?>
<root>
    <favorite film>home alone</favorite film>
    <favorite series>lost in space</favorite series>
    <favorite dish>potato</favorite dish>
    <favorite season>spring</favorite season>
    <country>American</country>
</root>

Control + C

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML

: cat > sklls.xml

<?xml version="1.0" encoding="UTF-8" ?>
<root>
    <skills>
        <row>GitBash</row>
        <row>GitHub</row>
        <row>DevTools</row>
        <row>Android Studio</row>
        <row>JSON</row>
        <row>XML</row>
        <row>API</row>
        <row>Charles</row>
        <row>SQL</row>
        <row>Jmeter</row>
        <row>Python</row>
    </skills>
</root>

Control + C

 32. Сделать коммит в одну строку.

: git add .|git commit -m "add two files"

 33. Отправить сразу 2 файла на внешний репозиторий.

:git push

 34. На веб интерфейсе создать файл bug_report.xml.

Вход в репозиторий XML => нажать кнопку add file => нажать create new file => ввести название bug_report.xml.


 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

Внизу страницы нажать на зеленую кнопку Commit changes.

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

<?xml version="1.0" encoding="UTF-8" ?>
<root>
        <ID>1R</ID>
        <Summary>На странице регистрации нового пользователя, название формы не соответствует требованию, при визуальном осмотре страницы.</Summary>
        <Project>Form_testing</Project>
     <Environment>
        <Operating_System>OS macOS 12.0.1 (21A559)</Operating_System>
        <Browser>Browser	Mozilla Firefox, Google Chrome, Safari (17612.4.9.1.8)</Browser>
    </Environment>
        <Preconditions>http://itcareer.pythonanywhere.com/</Preconditions>
    <Description>The cart should contain 2 items
        <1>Перейти на сайт </1>
        <2>Проверить название страницы</2>
    </Description>
        <Actual_result>ITCareerToday web form</Actual_result>
        <Expected_result>Registration form</Expected_result>
        <Severity>Major</Severity>
        <Priority>Medium</Priority>
        <Status>Open</Status>
        <Reporter>Удовиченко</Reporter>
        <Requirement>1F</Requirement>
        <Assignee>Ксендзов В.</Assignee>
</root>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

:Внизу страницы нажать на зеленую кнопку Commit changes.

 38. Синхронизировать внешний и локальный репозиторий XML
: git pull



          TXT
 1. Создать внешний репозиторий c названием TXT.

:Войти во вкладку Repositories => кнопка "+" => New repositories. Открывается страница на которой в поле вводится название TXT, выбрать public и поставить галочку на add readme.md file. Далее нажать на кнопку создать репозиторий.

 2. Клонировать репозиторий TXT на локальный компьютер.

:Открыть репозиторий TXT => нажать на кнопку code и скопировать ссылку https

Зайти в папку где будет размещен репозиторий 
:cd HW2
Клонировать репозиторий:
git clone https://github.com/LiudmylaUdov/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
:cd TXT
cat > new.txt

Control + C

 4. Добавить файл под гит.

: git add new.txt

 5. Закоммитить файл.

: git commit -m "add new.txt file"

 6. Отправить файл на внешний GitHub репозиторий.

: git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.

: cat > new.txt

Удовиченко Людмила Вадимовна
26 лет
Одна кошка
10000%

cntrl + C

 8. Отправить изменения на внешний репозиторий.

:git commit -a -m "add new.txt file 2"
 git push 

 9. Создать файл preferences.txt

:cat > preferances.txt 


 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
:
Любимый фильм - Один дома,    
Любимый сериал - Потерянные в космосе,
Любимая еда - картошка,
Любимое время года - весна,
страна - Америка.

Control + C

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT

:cat > sklls.txt

skills: "GitBash, GitHub, DevTools, Android Studio, JSON, XML, API, Charles, SQL, Jmeter, Python. 

Control + C


 12. Сделать коммит в одну строку.

:git add.| git commit -m "add two files"

 13. Отправить сразу 2 файла на внешний репозиторий.
: git push

 14. На веб интерфейсе создать файл bug_report.txt.

:Вход в репозиторий TXT => нажать кнопку add file => нажать create new file => ввести название bug_report.txt

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

:Внизу страницы нажать на зеленую кнопку Commit changes.

16. Веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
:
"Bag ID":
  
  ID: #123,
  Name: Card - Unable to add new item to my cart,
  Reporter: Liudmyla 

  Bug owerview:
  Summary: When my file contains one item.

Environment:

  Platform: Macintoch,
  Operating System: "OS X 10.12.0,
  Browser: "Chrome53

Bug details:

  Expected result: The cart should contain 2 items,
  Actual result: The cart contains only 1 item

Bug tracking:

  Severity: Major,
  Priority: High


 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

:Внизу страницы нажать на зеленую кнопку Commit changes.

 18. Синхронизировать внешний и локальный репозиторий TXT

:git pull



